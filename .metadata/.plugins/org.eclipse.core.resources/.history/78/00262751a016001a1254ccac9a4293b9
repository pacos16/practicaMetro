package controlador;

import java.util.List;

import org.hibernate.ObjectNotFoundException;
import org.hibernate.query.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

import model.*;

public class Operaciones{
	
	public static void main(String[] args) {
		SessionFactory factory= HibernateUtil.buildSessionFactory();
		Session session= factory.openSession();
		Transaction transaction= session.beginTransaction();
		TLineas linea= session.load(TLineas.class,1);
		transaction.commit();
		session.close();
	}
	
	
	
	public boolean addLineaEstacion(int idLinea,int idEstacion,int orden) {
		SessionFactory factory= HibernateUtil.buildSessionFactory();
		Session session= factory.openSession();
		Transaction transaction= session.beginTransaction();
		try {
			TLineas tLineas=session.load(TLineas.class,idLinea);
			TEstaciones tEstaciones= session.load(TEstaciones.class, idEstacion);
			String consulta= null;
			consulta = "from TLineaEstacion as le where le.TEstaciones=:idEstacion and le.orden= :orden";
			Query q=session.createQuery(consulta);
			q.setParameter(0, idEstacion);
			q.setParameter(1, orden);
			List results;
			results=q.list();
			if(results.size()>0) {
				return false;
			}
			
			consulta="from TLineaEstacion as le where le.TEstaciones=:idEstacion and le.TLinea=:idLinea";
			Query q2= session.createQuery(consulta);
			q2.setParameter(0, idEstacion);
			q2.setParameter(1, idLinea);
			
			results=q2.list();
			if(results.size()>0) {
				return false;
			}
			
			TLineaEstacion tLineaEstacion= new TLineaEstacion(new TLineaEstacionId(tLineas.getCodLinea()
					,tEstaciones.getCodEstacion()),tEstaciones,tLineas,orden);
			
			transaction.commit();
		}catch(ObjectNotFoundException onfe) {
			session.close();
			return false;
		}
		
		session.close();
		return true;
	}

}