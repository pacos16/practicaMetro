<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Apache Camel 3 - Whats New Top 10</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Fa5Om9oz54s/apache-camel-3-whats-new-top-10.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_whats_new_top_10</id><updated>2019-12-04T11:02:14Z</updated><published>2019-12-04T11:01:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Apache Camel 3 was released last thursday November 28th 2019, which also happens to be the day of the US Thanksgiving. This was not intentionally but we can say its a big thanks from us to the community with a brand new major version of Camel - this does not come by often. In fact it's 10 years since Camel 2 hit the streets. So this 3rd generation is long overdue.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-3humps_hu7ba293cf525bac57712ef8f5199c56b4_332440_800x0_resize_q95_gaussian_2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="687" data-original-width="800" height="274" src="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-3humps_hu7ba293cf525bac57712ef8f5199c56b4_332440_800x0_resize_q95_gaussian_2.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This blog post highlights the noteworthy new features and improvements in Camel v3.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;1) CAMEL IS NOW A FAMILY OF PROJECTS&lt;/b&gt;&lt;br /&gt;Apache Camel, is now a family of projects (3 at this time of writing):&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://github.com/apache/camel"&gt;Camel 3&lt;/a&gt;: Integration Framework Swiss knife of integration&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/apache/camel-k/"&gt;Camel K&lt;/a&gt;: Lightweight Serverless Integration Platform Camel on Kubernetes &amp;amp; Knative&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/apache/camel-quarkus"&gt;Camel Quarkus&lt;/a&gt;: Camel extensions for Quarkus Optimised JVM &amp;amp; Native compiled Java (GraalVM)&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-projects_hu14eb14882812af4ef4cf988ec2e12bd3_88043_800x0_resize_q95_gaussian_2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="338" data-original-width="800" height="168" src="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-projects_hu14eb14882812af4ef4cf988ec2e12bd3_88043_800x0_resize_q95_gaussian_2.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The Camel code-base is very large, and we have setup sub-projects for new innovative projects using Camel. The first sub-project was to run Camel as cloud-native on Kubernetes in a serverless manner which became Camel K. Then Camel Quarkus came to make Java and Camel with very fast startup and very small memory footprint primary for container based deployments.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;2) NEW WEBSITE&lt;/b&gt;&lt;br /&gt;A major goal for Camel 3 was to finally revamp the old aging website to use modern technologies and be able to auto-generate content from the source code. This has taken years to get to this point as we have built tools over the last many Camel 2.x releases that could take us closer. At end of 2019 then the Camel community and others stepped up and provided the new art-work, logo, and look and feel for the new website - thank you very much!.&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-website.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="372" data-original-width="800" height="185" src="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-website.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;For Camel 3.x we will continue to improve the website and the documentation. This is much easier for us to do, and also for people to contribute changes as its just a regular github PR to provide updates. We love contributions.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Zoran had some fun with the new look and feel and he added a little gem; if you stare at the front page, then you should see a little animation of the curved bezel ;)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;3) JAVA 11&lt;/b&gt;&lt;br /&gt;Camel 3 is the first official release that supports Java 11. Java 8 will still be supported for the first number of 3.x releases, but is expected to be dropped later in 2020. However we wanted to provide Java 8 support to help migrate Camel 2.x users whom may be restricted to Java 8 for some time to come.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;4) MODULARIZED CAMEL-CORE&lt;/b&gt;&lt;br /&gt;The camel-core has been modularized from 1 JAR to 33 JARs. The core functionality has been splitup into:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-api&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-base&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-caffeine-lrucache&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-cloud&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-core&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-core-engine&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-core-osgi&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-core-xml&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-endpointdsl&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-headersmap&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-jaxp&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-main&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-management-api&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-management-impl&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-support&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-util&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-util-json&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;For Camel end users then only a few JARs is relevant.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;camel-api&lt;/b&gt; contains the public API for Camel (eg interfaces such as CamelContext, Endpoint, Exchange, Message, and so on).&lt;br /&gt;&lt;br /&gt;&lt;b&gt;camel-support &lt;/b&gt;contains the base classes and RouteBuilder which you would use to build Camel routes and applications. This JAR is also contains necessary base classes for building custom Camel components, and other kinds of plugins.&lt;br /&gt;&lt;br /&gt;The components that resided in camel-core has also be externalized into individual components:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-bean&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-log&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-stub&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-browse&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-mock&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-timer&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-controlbus&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-properties&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-validator&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-dataformat&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-ref&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-vm&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-direct&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-rest&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-xpath&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-directvm&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-saga&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-xslt&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-file&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-scheduler&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-zip-deflater&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-language&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;camel-seda&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Camel end users can then pick and choose exactly only what they need, or keep using everything.&lt;br /&gt;&lt;br /&gt;Therefore we have camel-core and camel-core-engine as two starting dependencies. You can use camel-core which gives you all the JARs which is similar to Camel 2.x. When you use camel-core-engine you get the minimum set of JARs that makes a functional Camel.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-core-vs-engine.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="217" data-original-width="652" height="132" src="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-core-vs-engine.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;b&gt;camel-core&lt;/b&gt; contains 33 JARs and &lt;b&gt;camel-core-engine&lt;/b&gt; contains 12 JARs.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;5) FASTER STARTUP AND LOWER FOOTPRINT&lt;/b&gt;&lt;br /&gt;We have reduced the size of core Camel and the number of classes loaded. For example in Camel 2 about 5200 classes was loaded, which has been reduced to about 4300 loaded classes in Camel 3.&lt;br /&gt;&lt;br /&gt;We have also done many smaller optimizations in the core, to reduce the number of allocated Java objects, and speeup initialization and other means. We have used JVM profiling tools to assist and find the bottlenecks.&lt;br /&gt;&lt;br /&gt;Another area of improvement is to reduce Java reflections. In Camel 2 then all the configuration of Camel components, endpoints, and routes are reflection based. In Camel 3 we have source code generated Java code for configuration that allows us to use direct Java calls instead of reflections.&lt;br /&gt;&lt;br /&gt;Another similar area is Camel’s type converters which in Camel 2 are Java reflection based (you could build custom type converts that were not reflection based). In Camel 3 we also generate Java source code which means that type converting is direct Java calls at runtime.&lt;br /&gt;&lt;br /&gt;We have also moved initialization logic to earlier phases when it was possible. For example there is a new build phase which allows Camel to do special initialization during building your project (this requires Camel Quarkus).&lt;br /&gt;&lt;br /&gt;All this optimization improves the startup performance of Camel and reduces the memory overhead. With Camel Quarkus you can natively compile your Camel application and make it startup in 30 milli seconds and consume only 10mb of memory (RSS) with a full blown HTTP REST server and health-checks and metrics.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-quarkus_huba2c5d62ef8e8448d234c82a5572ee1a_737648_800x0_resize_q95_gaussian_2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="595" data-original-width="800" height="297" src="https://camel.apache.org/blog/Camel3-Whatsnew/camel3-quarkus_huba2c5d62ef8e8448d234c82a5572ee1a_737648_800x0_resize_q95_gaussian_2.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;There are still a few items on the agenda that we want to work on in Camel 3.x to further optimize Camel core.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;6) TYPE SAFE ENDPOINT DSL&lt;/b&gt;&lt;br /&gt;Camel end users whom has configured endpoints using URI strings, would all have experienced the problem when you make a configuration mistake in the endpoint, which then makes Camel fail on startup.&lt;br /&gt;&lt;br /&gt;In Camel 3, we have a new type-safe DSL for endpoints which you can use in Java routes. You can continue to use the classic URI strings, but if you want to try the endpoint DSL, then you need to add camel-endpointdsl to your classpath. Then you should extend EndpointRouteBuilder instead of RouteBuilder to access the endpoint DSL.&lt;br /&gt;&lt;br /&gt;Here is a basic example without and with the endpoint DSL:&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;from("timer:click?period=3000&amp;amp;fixedRate=true")&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;nbsp; &amp;nbsp; .to("seda:foo?blockWhenFull=true");&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;from(timer("click").period(3000).fixedRate(true))&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;nbsp; &amp;nbsp; .to(seda("foo").blockWhenFull(true));&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;You can also find a &lt;a href="https://github.com/apache/camel/tree/master/examples/camel-example-cafe-endpointdsl"&gt;little example&lt;/a&gt; in the source code.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;7) REACTIVE ROUTING ENGINE&lt;/b&gt;&lt;br /&gt;The routing engine in Camel has internally been reactive’fied and all EIPs has been retrofitted to work in a reactive manner. However this is internal only, and the Camel API for both end users and component developers are based on existing callback behavior.&lt;br /&gt;&lt;br /&gt;We will later introduce and work on a client-side facing reactive API after we have jumped to Java 11 as minimum version (then we can support Java 9 flowable API).&lt;br /&gt;&lt;br /&gt;Camel already have integration with reactive frameworks such as Vert.X, RxJava and Reactor Core in the dedicated Camel components.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;8) CAMEL MAIN&lt;/b&gt;&lt;br /&gt;We have introduced camel-main as a standalone JAR that makes it easier to run just Camel. There are a couple of examples with the source code that demonstrates how to do that.&lt;br /&gt;&lt;br /&gt;We also use camel-main to have common code to configure and bootstrap Camel for standalone, Spring Boot, Camel K, and Camel Quarkus. This allows us to share the same code, and configuration options.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;9) CAMEL MICROPROFILE&lt;/b&gt;&lt;br /&gt;Camel 3 now integrates better with Eclipse Microprofile and we have Camel components for Microprofile configuration, metrics, health checks, and fault tolerance (on the way).&lt;br /&gt;&lt;br /&gt;More components to come in upcoming Camel releases. These microprofile components are also used by Camel Quarkus.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;10) MISCELLANEOUS IMPROVEMENTS&lt;/b&gt;&lt;br /&gt;Camel 3 now supports JUnit 5 for unit tests, with the test components that have -junit5 as suffix.&lt;br /&gt;&lt;br /&gt;The Camel Registry is now also writeable, so you can add beans to the registry at runtime, or from unit tests etc.&lt;br /&gt;&lt;br /&gt;You can also configure endpoints (producer) to lazy start. By default Camel works in a fail-fast mode, which means that Camel components that fails to connect to external systems during startup may cause the route to fail on startup. For Camel 3 you can now configure these endpoints to lazy start, which means the route will startup and they will first fail when a message is routed to the endpoint.&lt;br /&gt;&lt;br /&gt;Camel also allows to configure your routes to be supervised during startup, which allows Camel to more intelligently start routes in a more safe manner, by restarting routes that failed.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;11) MIGRATING TO CAMEL 3&lt;/b&gt;&lt;br /&gt;We have of course cleaned up the code base, such as removing all deprecated APIs and components. We have also adjusted some APIs to make them easier to use from end users, and more Java 8 lambda friendly.&lt;br /&gt;&lt;br /&gt;Internally we have also adjusted the route model, to make it easier to extend into new DSLs; and there is a YAML DSL on the way which was initiated in Camel K.&lt;br /&gt;&lt;br /&gt;In terms of backwards compatibility then Camel 3 is mostly compatibility for regular Camel applications. However if you are using some of the more advanced features and other plugins in Camel then migration is needed. Also custom components must be migrated and recompiled. There are other adjustments such as Spring Boot users must use org.apache.camel.springboot as groupId instead of org.apache.camel etc. All details can be seen in the &lt;a href="https://camel.apache.org/manual/latest/camel-3-migration-guide.html"&gt;migration guide&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Good luck with your migration if you decide to continue your Camel journey. And for new users to Camel then good luck getting onboard.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;12) BONUS: NEW COMPONENTS&lt;/b&gt;&lt;br /&gt;There are 30 net new components in Camel 3, such as more stuff for Amazon AWS, and with GraphQL, and also worthwhile to mention is integration with Debezium, which is a change data capture project to grab change events from databases.&amp;nbsp;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=kTqFtzpfqvU:aj7D0skvf-g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=kTqFtzpfqvU:aj7D0skvf-g:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=kTqFtzpfqvU:aj7D0skvf-g:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=kTqFtzpfqvU:aj7D0skvf-g:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=kTqFtzpfqvU:aj7D0skvf-g:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=kTqFtzpfqvU:aj7D0skvf-g:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=kTqFtzpfqvU:aj7D0skvf-g:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/kTqFtzpfqvU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Fa5Om9oz54s" height="1" width="1" alt=""/&gt;</content><summary>Apache Camel 3 was released last thursday November 28th 2019, which also happens to be the day of the US Thanksgiving. This was not intentionally but we can say its a big thanks from us to the community with a brand new major version of Camel - this does not come by often. In fact it's 10 years since Camel 2 hit the streets. So this 3rd generation is long overdue. This blog post highlights the not...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-12-04T11:01:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/kTqFtzpfqvU/apache-camel-3-whats-new-top-10.html</feedburner:origLink></entry><entry><title>Understanding Red Hat AMQ Streams components for OpenShift and Kubernetes: Part 1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hi6Xs2GC_v8/" /><category term="Apache Kafka" scheme="searchisko:content:tags" /><category term="event-driven" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kafka streams" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Red Hat AMQ Streams" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Strimzi" scheme="searchisko:content:tags" /><author><name>Pramod Padmanabhan</name></author><id>searchisko:content:id:jbossorg_blog-understanding_red_hat_amq_streams_components_for_openshift_and_kubernetes_part_1</id><updated>2019-12-04T08:00:06Z</updated><published>2019-12-04T08:00:06Z</published><content type="html">&lt;p&gt;&lt;a href="https://access.redhat.com/products/red-hat-amq#streams" target="_blank" rel="noopener noreferrer"&gt;Red Hat AMQ Streams&lt;/a&gt; is an enterprise-grade &lt;a href="https://kafka.apache.org/" target="_blank" rel="noopener noreferrer"&gt;Apache Kafka&lt;/a&gt; (event streaming) solution, which enables systems to exchange data at high throughput and low latency. AMQ Streams is available as part of the Red Hat AMQ offering in two different flavors: one on the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.5/html/using_amq_streams_on_red_hat_enterprise_linux_rhel/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Enterprise Linux platform&lt;/a&gt; and another on the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.5/html/using_amq_streams_on_openshift_container_platform/" target="_blank" rel="noopener noreferrer"&gt;OpenShift Container Platform&lt;/a&gt;. In this three-part article series, we will cover AMQ Streams on the OpenShift Container Platform.&lt;/p&gt; &lt;p&gt;To get the most out of these articles, it will help to be familiar with messaging concepts, &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-650037"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;When running on containers, AMQ Streams poses different challenges (see this talk by &lt;a href="https://www.youtube.com/watch?v=rzHQvImn2XY" target="_blank" rel="noopener noreferrer"&gt;Sean Glover&lt;/a&gt;), such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Upgrading Kafka&lt;/li&gt; &lt;li&gt;Beginning deployment&lt;/li&gt; &lt;li&gt;Managing ZooKeeper&lt;/li&gt; &lt;li&gt;Replacing brokers&lt;/li&gt; &lt;li&gt;Rebalancing topic partitions&lt;/li&gt; &lt;li&gt;Decommissioning or adding brokers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These challenges are resolved using the &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/operator/" target="_blank" rel="noopener noreferrer"&gt;Operator pattern&lt;/a&gt; from the &lt;a href="https://strimzi.io/" target="_blank" rel="noopener noreferrer"&gt;Strimzi&lt;/a&gt; project.&lt;/p&gt; &lt;p&gt;Now that we have a basic background for Red Hat AMQ Streams, let&amp;#8217;s dive into how it all works.&lt;/p&gt; &lt;h2&gt;Red Hat AMQ Streams deep dive&lt;/h2&gt; &lt;p&gt;AMQ Streams has multiple Operators, which helps in solving the challenges of running AMQ Streams in the container world:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Cluster Operator&lt;/strong&gt;: Deploys and manages Kafka clusters on Enterprise containers.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Entity Operator&lt;/strong&gt;: Manages users and topics using two different sub-operators. The &lt;strong&gt;Topic Operator&lt;/strong&gt; manages Kafka topics in your Kafka cluster, and the &lt;strong&gt;User Operator&lt;/strong&gt; manages Kafka users on your Kafka cluster.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt;: Connects external systems to the Kafka cluster.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Kafka Mirror Maker&lt;/strong&gt;: Replicates data between Kafka clusters.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Kafka Bridge&lt;/strong&gt;: Acts as a bridge between different protocols and Kafka clusters. Currently supports HTTP 1.1 and AMQP 1.0.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Figure 1 shows a bird&amp;#8217;s view of Red Hat AMQ Streams on Red Hat OpenShift:&lt;/p&gt; &lt;div id="attachment_653677" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dcca436f1380.png"&gt;&lt;img aria-describedby="caption-attachment-653677" class="wp-image-653677 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dcca436f1380-1024x559.png" alt="AMQ Stream reference design on openshift, kubernetes. Enterprise Apache Kafka. Enterprise Strimzi" width="640" height="349" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dcca436f1380-1024x559.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dcca436f1380-300x164.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dcca436f1380-768x420.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-653677" class="wp-caption-text"&gt;Figure 1: How Red Hat AMQ Streams and Red Hat OpenShift interact.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now let&amp;#8217;s create a &amp;#8220;hello world&amp;#8221; program for all of these components. Due to the size of this walk-through, we will cover this topic in three articles, as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Part 1: Setting up ZooKeeper, Kafka, and the Entity Operator&lt;/li&gt; &lt;li&gt;Part 2: Kafka Connect, Kafka Bridge, and Mirror Maker&lt;/li&gt; &lt;li&gt;Part 3: Monitoring and administration&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Setting up ZooKeeper, Kafka, and the Entity Operator&lt;/h2&gt; &lt;p&gt;Before starting, you will need an OCP cluster with a Red Hat subscription to access the Red Hat container images, and cluster admin access. This walk-through uses Red Hat AMQ Streams 1.3.0:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Download and extract Red Hat AMQ Streams 1.3.0 and the OpenShift Container Platform Images from the &lt;a href="https://access.redhat.com/announcements/4529551" target="_blank" rel="noopener noreferrer"&gt;Red Hat AMQ Streams 1.3.o download page&lt;/a&gt;:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ unzip amq-streams-1.3.0-ocp-install-examples.zip&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;There will be two folders: &lt;code&gt;examples&lt;/code&gt; and &lt;code&gt;install&lt;/code&gt;.&lt;/p&gt; &lt;ol start="2"&gt; &lt;li&gt;Log in and create a new project and namespace for AMQ Streams (see Figure 2):&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc login -u admin_user -p admin_password https://redhat.ocp.cluster.url.com $ oc new-project amq-streams&lt;/pre&gt; &lt;div id="attachment_651567" style="width: 471px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8b39a0ac6a.png"&gt;&lt;img aria-describedby="caption-attachment-651567" class="wp-image-651567 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8b39a0ac6a.png" alt="amq-streams project creation image" width="461" height="216" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8b39a0ac6a.png 461w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8b39a0ac6a-300x141.png 300w" sizes="(max-width: 461px) 100vw, 461px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-651567" class="wp-caption-text"&gt;Figure 2: AMQ Streams now shows up as a project.&lt;/p&gt;&lt;/div&gt; &lt;ol start="3"&gt; &lt;li&gt;Navigate to the &lt;code&gt;install/cluster-operator&lt;/code&gt; folder and modify the role-binding YAML files to use &lt;code&gt;amq-streams&lt;/code&gt; as their namespace:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ sed -i 's/namespace: .*/namespace: amq-streams/' install/cluster-operator/*RoleBinding*.yaml&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;For macOS:&lt;/p&gt; &lt;pre style="padding-left: 40px;"&gt;$ sed -i '' 's/namespace: .*/namespace: amq-streams/' install/cluster-operator/*RoleBinding*.yaml&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Create the Cluster Operator (see Figure 3):&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc apply -f install/cluster-operator kafka_2.12-2.3.0.redhat-00003 pramod$ oc apply -f install/cluster-operator serviceaccount/strimzi-cluster-operator created clusterrole.rbac.authorization.k8s.io/strimzi-cluster-operator-namespaced created rolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator created clusterrole.rbac.authorization.k8s.io/strimzi-cluster-operator-global created clusterrolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator created clusterrole.rbac.authorization.k8s.io/strimzi-kafka-broker created clusterrolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator-kafka-broker-delegation created clusterrole.rbac.authorization.k8s.io/strimzi-entity-operator created rolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator-entity-operator-delegation created clusterrole.rbac.authorization.k8s.io/strimzi-topic-operator created rolebinding.rbac.authorization.k8s.io/strimzi-cluster-operator-topic-operator-delegation created customresourcedefinition.apiextensions.k8s.io/kafkas.kafka.strimzi.io created customresourcedefinition.apiextensions.k8s.io/kafkaconnects.kafka.strimzi.io created customresourcedefinition.apiextensions.k8s.io/kafkaconnects2is.kafka.strimzi.io created customresourcedefinition.apiextensions.k8s.io/kafkatopics.kafka.strimzi.io created customresourcedefinition.apiextensions.k8s.io/kafkausers.kafka.strimzi.io created customresourcedefinition.apiextensions.k8s.io/kafkamirrormakers.kafka.strimzi.io created customresourcedefinition.apiextensions.k8s.io/kafkabridges.kafka.strimzi.io created deployment.apps/strimzi-cluster-operator created&lt;/pre&gt; &lt;div id="attachment_651577" style="width: 510px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8d869524a2.png"&gt;&lt;img aria-describedby="caption-attachment-651577" class="wp-image-651577" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8d869524a2-300x86.png" alt="AMQ stream cluster operator" width="500" height="144" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8d869524a2-300x86.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8d869524a2-768x221.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8d869524a2.png 945w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-651577" class="wp-caption-text"&gt;Figure 3: The strimzi-cluster-operator was created.&lt;/p&gt;&lt;/div&gt; &lt;ol start="5"&gt; &lt;li&gt;Ensure you have eight physical volumes. For the walk-through, we are using 5GB persistent volumes:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc get pv | grep Available kafka_2.12-2.3.0.redhat-00003 pramod$ oc get pv -o wide | grep Available NAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGE pv14 5Gi RWO Recycle Available 34m pv19 5Gi RWO Recycle Available 34m pv20 5Gi RWO Recycle Available 34m pv21 5Gi RWO Recycle Available 34m pv23 5Gi RWO Recycle Available 34m pv3 5Gi RWO Recycle Available 34m pv5 5Gi RWO Recycle Available 34m pv9 5Gi RWO Recycle Available 34m&lt;/pre&gt; &lt;ol start="6"&gt; &lt;li&gt;Create the persistent cluster config &lt;code&gt;amq-kafka-cluster.yml&lt;/code&gt;. The example file present in &lt;code&gt;examples/kafka/kafka-persistent.yml&lt;/code&gt; was used as a reference for this config:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;apiVersion: kafka.strimzi.io/v1beta1 kind: Kafka metadata: name: simple-cluster spec: kafka: version: 2.3.0 replicas: 5 listeners: plain: {} tls: {} config: offsets.topic.replication.factor: 5 transaction.state.log.replication.factor: 5 transaction.state.log.min.isr: 2 log.message.format.version: "2.3" storage: type: jbod volumes: - id: 0 type: persistent-claim size: 5Gi deleteClaim: false zookeeper: replicas: 3 storage: type: persistent-claim size: 5Gi deleteClaim: false entityOperator: topicOperator: {} userOperator: {}&lt;/pre&gt; &lt;ol start="7"&gt; &lt;li&gt;Create the AMQ Streams cluster (see Figure 4):&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc apply -f amq-kafka-cluster.yml pramod$ oc get pv | grep Bound pv12 5Gi RWO Recycle Bound ocplab/mongodb 38m pv14 5Gi RWO Recycle Bound amq-streams/data-0-simple-cluster-kafka-4 38m pv19 5Gi RWO Recycle Bound amq-streams/data-0-simple-cluster-kafka-3 38m pv20 5Gi RWO Recycle Bound amq-streams/data-0-simple-cluster-kafka-2 38m pv21 5Gi RWO Recycle Bound amq-streams/data-0-simple-cluster-kafka-1 38m pv23 5Gi RWO Recycle Bound amq-streams/data-0-simple-cluster-kafka-0 38m pv3 5Gi RWO Recycle Bound amq-streams/data-simple-cluster-zookeeper-2 38m pv5 5Gi RWO Recycle Bound amq-streams/data-simple-cluster-zookeeper-0 38m pv9 5Gi RWO Recycle Bound amq-streams/data-simple-cluster-zookeeper-3 38m&lt;/pre&gt; &lt;div id="attachment_651627" style="width: 510px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8e3b3c15d3.png"&gt;&lt;img aria-describedby="caption-attachment-651627" class="wp-image-651627" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8e3b3c15d3-300x126.png" alt="AMQ stream cluster" width="500" height="211" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8e3b3c15d3-300x126.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc8e3b3c15d3.png 724w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-651627" class="wp-caption-text"&gt;Figure 4: ZooKeeper, Kafka, and the Entity operator now appear.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;To test your cluster:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Log into the OpenShift Container Platform (OCP) cluster, create a producer sample app, and push a few messages:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc run kafka-producer -ti --image=registry.redhat.io/amq7/amq-streams-kafka-23:1.3.0 --rm=true --restart=Never -- bin/kafka-console-producer.sh --broker-list simple-cluster-kafka-bootstrap:9092 --topic redhat-demo-topics If you don't see a command prompt, try pressing enter. &amp;#62;hello world &amp;#62;from pramod&lt;/pre&gt; &lt;p id="gBwjOPc" style="padding-left: 40px;"&gt;Ignore the warning for now.&lt;/p&gt; &lt;ol start="2"&gt; &lt;li&gt;Open another terminal and create a consumer sample app to listen to the messages:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc run kafka-consumer -ti --image=registry.redhat.io/amq7/amq-streams-kafka-23:1.3.0 --rm=true --restart=Never -- bin/kafka-console-consumer.sh --bootstrap-server simple-cluster-kafka-bootstrap:9092 --topic redhat-demo-topics --from-beginning&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;You should see two messages, which were published using the producer terminal, as shown in Figure 5:&lt;/p&gt; &lt;div id="attachment_652187" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc9f71d54ebe.png"&gt;&lt;img aria-describedby="caption-attachment-652187" class="wp-image-652187 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc9f71d54ebe-1024x99.png" alt="" width="640" height="62" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc9f71d54ebe-1024x99.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc9f71d54ebe-300x29.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc9f71d54ebe-768x74.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-652187" class="wp-caption-text"&gt;Figure 5: The consumer terminal listening to the producer&amp;#8217;s messages.&lt;/p&gt;&lt;/div&gt; &lt;ol start="3"&gt; &lt;li&gt;Exit from both the producer and the consumer connections using Ctrl+C.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, we explored Red Hat AMQ Streams basics and its components. We also showed how to create a basic Red Hat AMQ cluster on Red Hat OpenShift. In the next article, we will address Kafka Connect, the Kafka Bridge, and Mirror Maker.&lt;/p&gt; &lt;h3&gt;References&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/pramodmax/amqstream-getting-started" target="_blank" rel="noopener noreferrer"&gt;GitHub for the snippet&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/products/red-hat-amq#streams" target="_blank" rel="noopener noreferrer"&gt;Red Hat AMQ Streams 1.3&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://strimzi.io/" target="_blank" rel="noopener noreferrer"&gt;Strimzi&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rzHQvImn2XY" target="_blank" rel="noopener noreferrer"&gt;Running Kafka On Kubernetes With Strimzi For Real-Time Streaming Applications&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.5/html-single/using_amq_streams_on_openshift/index" target="_blank" rel="noopener noreferrer"&gt;Using AMQ Streams on OpenShift&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#38;linkname=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#38;linkname=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#38;linkname=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#38;linkname=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#38;linkname=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#38;linkname=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#38;linkname=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F04%2Funderstanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1%2F&amp;#038;title=Understanding%20Red%20Hat%20AMQ%20Streams%20components%20for%20OpenShift%20and%20Kubernetes%3A%20Part%201" data-a2a-url="https://developers.redhat.com/blog/2019/12/04/understanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1/" data-a2a-title="Understanding Red Hat AMQ Streams components for OpenShift and Kubernetes: Part 1"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/04/understanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1/"&gt;Understanding Red Hat AMQ Streams components for OpenShift and Kubernetes: Part 1&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hi6Xs2GC_v8" height="1" width="1" alt=""/&gt;</content><summary>Red Hat AMQ Streams is an enterprise-grade Apache Kafka (event streaming) solution, which enables systems to exchange data at high throughput and low latency. AMQ Streams is available as part of the Red Hat AMQ offering in two different flavors: one on the Red Hat Enterprise Linux platform and another on the OpenShift Container Platform. In this three-part article series, we will cover AMQ Streams...</summary><dc:creator>Pramod Padmanabhan</dc:creator><dc:date>2019-12-04T08:00:06Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/04/understanding-red-hat-amq-streams-components-for-openshift-and-kubernetes-part-1/</feedburner:origLink></entry><entry><title>APIs as a Product: Get started in no time</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/A0tpRzNu2Z0/" /><category term="API" scheme="searchisko:content:tags" /><category term="API as a Product" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat 3scale API Management" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><author><name>Nicolas Massé</name></author><id>searchisko:content:id:jbossorg_blog-apis_as_a_product_get_started_in_no_time</id><updated>2019-12-03T08:00:27Z</updated><published>2019-12-03T08:00:27Z</published><content type="html">&lt;p&gt;In the previous article, &lt;a href="https://developers.redhat.com/blog/2019/11/21/apis-as-a-product/"&gt;APIs as a Product: Get the value out of your APIs&lt;/a&gt;, we presented a new approach called &amp;#8220;APIs as a Product&amp;#8221; to maximize the value of your APIs. In this article, we show how to quickly get started with APIs as a Product using the new features of &lt;a href="https://developers.redhat.com/products/3scale/overview"&gt;Red Hat 3scale API Management 2.7&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To showcase the power of 3scale 2.7&amp;#8217;s new features, combined with the awesomeness of the open source communities &lt;a href="https://www.apicur.io/" target="_blank" rel="noopener noreferrer"&gt;Apicurio&lt;/a&gt; and &lt;a href="http://microcks.github.io/" target="_blank" rel="noopener noreferrer"&gt;Microcks&lt;/a&gt;, we will design two APIs as a Product and show how we can compose both products in 3scale to get the resulting API as a Product.&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Let’s look at the well-known Petstore example. &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Imagine for a moment that the first steps of the API Design Thinking process led to this rough definition of the customer’s needs:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;Petstore is a company selling cuddly toys online. They would like to open a marketplace to let partners resell the pets. Ideally, orders have to placed through an API so that the whole process can be automated. The partners are split over what they want:&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;One group of Petstore&amp;#8217;s partners expressed the need to be able to discover the Petstore inventory to add items to their own catalog.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;Other partners want to have the checkout process managed for them, from cart creation up to checkout. &lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;A last group of partners wants to do both.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In the first part of the video below, we go through the API Ideation process to design two products: One&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; to discover the inventory, and one &lt;/span&gt;to place an order. &lt;span style="font-weight: 400;"&gt;Then, we&amp;#8217;ll go through the API Prototyping step to expose our two products as live mocks.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Finally, we use the features of 3scale 2.7 to compose both products as a unique product, expose it through API Management, and gather feedback from our early adopters.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;To get started with APIs as a Product, watch this video:&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/-H4bh1UbZNc?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Note that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;API Ideation starts at 01:37.&lt;/li&gt; &lt;li&gt;API Prototyping starts at 08:53.&lt;/li&gt; &lt;li&gt;The API as a Product features of 3scale 2.7 are showcased at 18:46.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fapis-as-a-product-get-started-in-no-time%2F&amp;#038;title=APIs%20as%20a%20Product%3A%20Get%20started%20in%20no%20time" data-a2a-url="https://developers.redhat.com/blog/2019/12/03/apis-as-a-product-get-started-in-no-time/" data-a2a-title="APIs as a Product: Get started in no time"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/03/apis-as-a-product-get-started-in-no-time/"&gt;APIs as a Product: Get started in no time&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/A0tpRzNu2Z0" height="1" width="1" alt=""/&gt;</content><summary>In the previous article, APIs as a Product: Get the value out of your APIs, we presented a new approach called “APIs as a Product” to maximize the value of your APIs. In this article, we show how to quickly get started with APIs as a Product using the new features of Red Hat 3scale API Management 2.7. To showcase the power of 3scale 2.7’s new features, combined with the awesomeness of the open sou...</summary><dc:creator>Nicolas Massé</dc:creator><dc:date>2019-12-03T08:00:27Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/03/apis-as-a-product-get-started-in-no-time/</feedburner:origLink></entry><entry><title>Red Hat CodeReady Workspaces 2: New tools to speed Kubernetes development</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/1_gMQV7wJFo/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Workspaces" scheme="searchisko:content:tags" /><author><name>Stevan LeMeur</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_codeready_workspaces_2_new_tools_to_speed_kubernetes_development</id><updated>2019-12-03T08:00:21Z</updated><published>2019-12-03T08:00:21Z</published><content type="html">&lt;p&gt;We are pleased to announce the release of &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview"&gt;Red Hat CodeReady Workspaces 2.0&lt;/a&gt;. Based on &lt;a href="https://www.eclipse.org/che/getting-started/cloud/?sc_cid=701f2000000RtqCAAS"&gt;Eclipse Che&lt;/a&gt;, its upstream project CodeReady Workspaces is a &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;-native developer environment enabling cloud-native development for developer teams.&lt;/p&gt; &lt;p&gt;CodeReady Workspaces 2.0 is available now on OpenShift 3.11 and OpenShift 4.x.&lt;/p&gt; &lt;p&gt;This new version introduces:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Kubernetes-native developer sandboxes on OpenShift:&lt;/b&gt; Bring your Kubernetes application into your development environment, allowing you to code, build, test, and run as in production.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Integrated OpenShift experience:&lt;/b&gt; OpenShift plugin and integration into the OpenShift 4 Developer Console.&lt;/li&gt; &lt;li&gt;&lt;b&gt;New editor and Visual Studio (VS) Code extensions compatibility:&lt;/b&gt; New browser-based editor, providing a VS Code-like experience. Compatibility with VS Code extensions.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Devfile, developer environment as code:&lt;/b&gt; Developer environments are codified with a devfile making them consistent, repeatable, and reproducible.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Centrally hosted on OpenShift with AirGap:&lt;/b&gt; Deploy on your OpenShift cluster, behind your firewall. AirGap capabilities. Easier to monitor and administer.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-660297"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Kubernetes-native developer sandboxes on OpenShift&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.0 provides developer environments that are &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; pods running on OpenShift. In those sandboxes are the components and tools needed to code on a project: a browser-based editor, the plugins, the tools, and the different runtimes required for your project. Everything is running in containers, providing highly consistent, repeatable, and reproducible developer environments—zero config needed, zero pain.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-660327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f1.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f1.png" alt="CodeReady Workspaces 2.0, provides developer environments which are kubernetes pods running on OpenShift. " width="512" height="174" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f1.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f1-300x102.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p&gt;In this new version, everything you need in your developer environment is fully containerized, even the editor and its plugins. CodeReady Workspaces isolates the tools from your application runtime, allowing you to bring your Kubernetes application into your developer sandbox, code on your application, and run it as in production. The tools are running in sidecar containers and packaged with their own dependencies, making the configuration of your developer environment smooth and keeping your application runtimes untainted from the tools you are using.&lt;/p&gt; &lt;div id="attachment_660357" style="width: 522px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-660357" class=" aligncenter wp-image-660357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f2.png" alt="" width="512" height="490" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f2.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f2-300x287.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;p id="caption-attachment-660357" class="wp-caption-text"&gt;Developer tools are containerized, zero dependency installation, isolated execution and lifecycle, easy to upgrade and switch.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;With CodeReady Workspaces, you can code directly on OpenShift, bring your Kubernetes application into your developer sandbox, and code and run your code as close as possible to how it will run on production.&lt;/p&gt; &lt;h2&gt;Integrated OpenShift experience&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.0 enables developers to create applications running on OpenShift easily. Developers benefit from an integrated experience, providing a fast turnaround in the inner-loop development process.&lt;/p&gt; &lt;p&gt;An OpenShift plugin is available to speed up OpenShift development. Developers can connect to any OpenShift cluster and create, debug, and deploy directly from CodeReady Workspaces.&lt;/p&gt; &lt;p&gt;This plugin leverages &lt;a href="https://developers.redhat.com/blog/2019/08/14/openshift-development-with-interactive-odo/"&gt;OpenShift Do (odo)&lt;/a&gt; to simplify inner-loop development and &lt;a href="https://developers.redhat.com/blog/2019/05/03/announcing-odo-developer-focused-cli-for-red-hat-openshift/"&gt;OpenShift CLI (oc)&lt;/a&gt; to help you interact with the OpenShift instance and enriching the inner-loop experience. It is compatible with OpenShift instances (3.11 or 4.x) and supporting public cloud instances, such as Red Hat OpenShift on Azure and AWS.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-660367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f3.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f3.gif" alt="Workspace animated demo" width="512" height="341" /&gt;&lt;/p&gt; &lt;p&gt;Starting with OpenShift 4.2, when CodeReady Workspaces is installed from the Operator Hub, it becomes available in the OpenShift Developer Perspective, allowing you to get a developer workspace from the application topology view.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-660387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f4.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f4.gif" alt="a developer workspace from the application topology view." width="512" height="279" /&gt;&lt;/p&gt; &lt;h2&gt;New editor and VS Code extension compatibility&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.0 provides a new default editor based on &lt;a href="https://theia-ide.org/"&gt;Eclipse Theia&lt;/a&gt;. Developers can enjoy a responsive, desktop-like experience that feels familiar.&lt;/p&gt; &lt;p&gt;This new default editor also brings compatibility with VS Code extensions. The plugin registry provided with CodeReady Workspaces already package tools for the most popular languages: JavaScript, Java, Python, .NET, Go, PHP, XML, and Yaml. You’ll also find tools for OpenShift. Bringing an existing plugin from VS Code is simple; the main difference is in the way the plugins are packaged. On CodeReady Workspaces, plugins are delivered with their dependencies in their own container and running as a sidecar in the workspace pod.&lt;/p&gt; &lt;p&gt;With the new version of CodeReady Workspaces, developers benefit from a richer editing experience with:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;Command palette:&lt;/b&gt; Full keyboard navigation.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Rich editor:&lt;/b&gt; Find/Replace instances, peek definition, outline view.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Debugger:&lt;/b&gt; Integrated debugging experience.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Git:&lt;/b&gt; Native Git experience, visual indicators for changes in project explorer and editor.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Layout customization:&lt;/b&gt; Configure the layout with drag &amp;#38; drop.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Theming:&lt;/b&gt; White or black themes are available out of the box.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Security:&lt;/b&gt; Secured communication between the editor, the end user, and the workspace.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Extended tasks:&lt;/b&gt; Handles the CodeReady Workspaces commands and provides the ability to start those into a specific container of the workspace.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Extended terminal:&lt;/b&gt; Allows providing a terminal for any of the containers of the workspace pod.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Workspace plugin:&lt;/b&gt; Provides a view that shows all the containers that are running in the workspace and allows interacting with them.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Ports plugin:&lt;/b&gt; Allows detecting when services are running inside of the workspace and automatically expose them.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Air-gapped capabilities&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces supports installation in a restricted environment. This includes your own private cloud, disconnected from the public internet.&lt;/p&gt; &lt;p&gt;CodeReady Workspaces can be configured to rely on your private image registry. The different components needed for CodeReady Workspaces will be installed and configured so that they use only your internal resources.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-660407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f6.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f6.png" alt="CodeReady Workspaces can be configured to rely on your private image registry." width="497" height="512" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f6.png 497w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f6-291x300.png 291w" sizes="(max-width: 497px) 100vw, 497px" /&gt;&lt;/p&gt; &lt;p&gt;The workspaces pod, with the tools and the different plugins, also can be configured to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Leverage your private Git repositories.&lt;/li&gt; &lt;li&gt;Leverage your runtime containers from your own container registries.&lt;/li&gt; &lt;li&gt;Rely on your own maven, npm, or any dependency repository you have.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For installation, follow the documentation instructions for &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/1.2/html/administration_guide/installing_codeready-workspaces"&gt;OpenShift Container Platform 3.11&lt;/a&gt; and &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.0/html/installation_guide/installing-codeready-workspaces-on-ocp-4_crw"&gt;OpenShift Container Platform 4.x&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Devfile, developer environment as code&lt;/h2&gt; &lt;p&gt;The devfile provides easy to configure, reproducible definitions of portable developer environments.&lt;/p&gt; &lt;p&gt;The devfile is a declarative abstraction of a developer workspaces, which includes the runtime environments of the application, the source code of the projects mapped to repositories and the tools, plugins, and commands needed to code, build, test, run, and debug an application. This makes the developer workspace replicable. You can use your OpenShift application definition with your devfile; just “dev-mode” it by supercharging the tools you need to code on it.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-660417 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f7.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f7.png" alt="You can use your OpenShift application definition with your devfile, just “dev-mode” it by supercharging the tools you need to code on it." width="512" height="304" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f7.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/12/crw_v2_f7-300x178.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;br /&gt; Once you have a devfile configured for your project, you can host it on your source code repository.&lt;/p&gt; &lt;p&gt;With the devfile definition and CodeReady Workspaces, developer environments are becoming fully codified, and easily can be modified, shared, forked, and extended. You don’t need to mess with hard-to-maintain and hard-to-manage documentation, VMs, and dockerfiles, which provide only a partial solution on setting up a developer environment.&lt;/p&gt; &lt;h2&gt;Try CodeReady Workspaces 2.0 now&lt;/h2&gt; &lt;p&gt;CodeReady Workspaces 2.0 is available now on OpenShift 3.11 and OpenShift 4.x:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;See the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.0/html/installation_guide/installing-codeready-workspaces-on-openshift-3-using-the-operator_crw"&gt;OpenShift 3.11 installation instruction&lt;/a&gt;s.&lt;/li&gt; &lt;li&gt;On OpenShift 4.x, you can install directly from Operator Hub and &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_codeready_workspaces/2.0/html/installation_guide/installing-codeready-workspaces-on-ocp-4_crw"&gt;follow the documentation&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Download the &lt;a href="https://developers.redhat.com/products/codeready-workspaces/download"&gt;Red Hat CodeReady Workspaces CLI&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Visit the &lt;a href="https://developers.redhat.com/products/codeready-workspaces"&gt;Red Hat CodeReady Workspaces product page&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#38;linkname=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Fred-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development%2F&amp;#038;title=Red%20Hat%20CodeReady%20Workspaces%202%3A%20New%20tools%20to%20speed%20Kubernetes%20development" data-a2a-url="https://developers.redhat.com/blog/2019/12/03/red-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development/" data-a2a-title="Red Hat CodeReady Workspaces 2: New tools to speed Kubernetes development"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/03/red-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development/"&gt;Red Hat CodeReady Workspaces 2: New tools to speed Kubernetes development&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/1_gMQV7wJFo" height="1" width="1" alt=""/&gt;</content><summary>We are pleased to announce the release of Red Hat CodeReady Workspaces 2.0. Based on Eclipse Che, its upstream project CodeReady Workspaces is a Red Hat OpenShift-native developer environment enabling cloud-native development for developer teams. CodeReady Workspaces 2.0 is available now on OpenShift 3.11 and OpenShift 4.x. This new version introduces: Kubernetes-native developer sandboxes on Open...</summary><dc:creator>Stevan LeMeur</dc:creator><dc:date>2019-12-03T08:00:21Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/03/red-hat-codeready-workspaces-2-new-tools-to-speed-kubernetes-development/</feedburner:origLink></entry><entry><title>Testing in production: From DevTestOops to DevTestOps</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/E82EG5D4nNI/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="testing" scheme="searchisko:content:tags" /><author><name>Alex Soto Bueno</name></author><id>searchisko:content:id:jbossorg_blog-testing_in_production_from_devtestoops_to_devtestops</id><updated>2019-12-03T07:55:14Z</updated><published>2019-12-03T07:55:14Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/devnation/"&gt;DevNation tech talks&lt;/a&gt; are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you’ll learn about testing in production from Alex Soto, Red Hat Software Engineer.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/topics/devops/"&gt;DevOps&lt;/a&gt; has grown in popularity in recent years, particularly in software companies that want to reduce lead time to be measured in days/weeks instead of months/years. To make sure your software does the right things and does those things right, you need to test it implacably. Many companies, however, see the testing phase as a bottleneck that slows product release. To change that, we need a new approach — making the release process of an application a testing process and involving QA from the beginning.&lt;/p&gt; &lt;p&gt;In this presentation, we will actively demonstrate several techniques that you can use immediately to start testing in production and speeding up your release cycle.&lt;span id="more-657897"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation here:&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/EVD4EXj8RKc" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;Learn more&lt;/h3&gt; &lt;p&gt;Join us at an &lt;a href="https://developers.redhat.com/events/"&gt;upcoming developer event&lt;/a&gt;, and see our collection of past &lt;a href="https://developers.redhat.com/devnation/"&gt;DevNation tech talks&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#38;linkname=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#38;linkname=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#38;linkname=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#38;linkname=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#38;linkname=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#38;linkname=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#38;linkname=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F03%2Ftesting-in-production-from-devtestoops-to-devtestops%2F&amp;#038;title=Testing%20in%20production%3A%20From%20DevTestOops%20to%20DevTestOps" data-a2a-url="https://developers.redhat.com/blog/2019/12/03/testing-in-production-from-devtestoops-to-devtestops/" data-a2a-title="Testing in production: From DevTestOops to DevTestOps"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/03/testing-in-production-from-devtestoops-to-devtestops/"&gt;Testing in production: From DevTestOops to DevTestOps&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/E82EG5D4nNI" height="1" width="1" alt=""/&gt;</content><summary>DevNation tech talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you’ll learn about testing in production from Alex Soto, Red Hat Software Engineer. DevOps has grown in popularity in recent years, particularly in software companies that want to reduce lead time to be measu...</summary><dc:creator>Alex Soto Bueno</dc:creator><dc:date>2019-12-03T07:55:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/03/testing-in-production-from-devtestoops-to-devtestops/</feedburner:origLink></entry><entry><title>Apache Camel 3 - Top 10 of What's New</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sv3hLK39ljg/apache-camel-3-top-10-of-whats-new.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="roadmap" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_3_top_10_of_what_s_new</id><updated>2019-12-02T19:09:02Z</updated><published>2019-12-02T19:09:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Today I posted a &lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/"&gt;blog on the Apache Camel 3 website&lt;/a&gt; with a top 10 of what's new in the brand new Apache Camel v3 release.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-VvnBGXwbvyI/XeVhDRlpd2I/AAAAAAAACB8/PifRKJtZQOYwAI7F1au1cGOv4Xr5EcN_QCLcBGAsYHQ/s1600/camel3-3humps.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="496" data-original-width="578" height="274" src="https://1.bp.blogspot.com/-VvnBGXwbvyI/XeVhDRlpd2I/AAAAAAAACB8/PifRKJtZQOYwAI7F1au1cGOv4Xr5EcN_QCLcBGAsYHQ/s320/camel3-3humps.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;So head over to the &lt;a href="https://camel.apache.org/blog/Camel3-Whatsnew/"&gt;Camel website&lt;/a&gt; and read the blog post.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=U4a-OwbE808:-0MubjsAznc:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=U4a-OwbE808:-0MubjsAznc:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=U4a-OwbE808:-0MubjsAznc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=U4a-OwbE808:-0MubjsAznc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/U4a-OwbE808" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sv3hLK39ljg" height="1" width="1" alt=""/&gt;</content><summary>Today I posted a blog on the Apache Camel 3 website with a top 10 of what's new in the brand new Apache Camel v3 release. So head over to the Camel website and read the blog post.</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-12-02T19:09:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/U4a-OwbE808/apache-camel-3-top-10-of-whats-new.html</feedburner:origLink></entry><entry><title>Infinispan's new image</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7f-Uy01xkRg/" /><category term="docker" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><author><name>Ryan Emerson</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_s_new_image</id><updated>2019-12-02T16:11:53Z</updated><published>2019-12-02T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Infinispan 10 introduced a &lt;a href="https://infinispan.org/blog/2019/11/11/serverng/"&gt;new server&lt;/a&gt;, which does not utilise the same launch commands and configuration as the legacy 9.4 wildfly based server. Therefore, we decided that this was an excellent opportunity to rewrite our container image from scratch to better suite the capabilities of the new server and to provide all the functionality required by the &lt;a href="https://infinispan.org/blog/2019/11/25/infinispan-operator-1/"&gt;Infinispan Operator&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This post focuses on the server image’s architecture. Future blog posts will focus on more advanced configurations, as well as example usage and deployment scenarios such as deploying a cluster using Kubernetes StatefulSets.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_show_me_the_code"&gt;&lt;a class="anchor" href="#_show_me_the_code"&gt;&lt;/a&gt;Show me the code!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The source code for the Infinispan image has a new home. The image can be found at &lt;a href="https://github.com/infinispan/infinispan-images" class="bare"&gt;https://github.com/infinispan/infinispan-images&lt;/a&gt;. Currently this repository only contains the server image, however our intention is for this to also be the home for all future Infinispan related images.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_wheres_the_dockerfile"&gt;&lt;a class="anchor" href="#_wheres_the_dockerfile"&gt;&lt;/a&gt;Where’s the Dockerfile?&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The most noticable change when looking at the repository is that there is no &lt;code&gt;Dockerfile&lt;/code&gt; in the source tree. This is because we decided to utilise the open-source tool &lt;a href="https://cekit.io/"&gt;CEKit&lt;/a&gt; to build our images. CEKit is an image creation tool that allows container images to be created using multiple build engines (e.g. docker, &lt;a href="https://buildah.io/"&gt;Buildah&lt;/a&gt;, &lt;a href="https://podman.io/"&gt;Podman&lt;/a&gt;) with a single configuration. Installation instructions can be found &lt;a href="https://docs.cekit.io/en/latest/handbook/installation/instructions.html"&gt;here&lt;/a&gt;, but the basic command to create a Docker based image is as follows.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;cekit build docker&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;CEKit leverages &lt;code&gt;.yaml&lt;/code&gt; files for all configuration, opposed to a Dockerfile, as this allows for build time overriding of image properties. For example, with CEKit it’s possible to override the server artifact version without modifying any files, instead the following is passed as a build parameter.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;cekit build --overrides '{"artifacts": [{"name": "server.zip", "path": "infinispan-server-10.0.0-SNAPSHOT.zip"}]}' docker&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More detailed instructions about how to build the server image from source can be found in the &lt;a href="https://github.com/infinispan/infinispan-images/tree/10.0.x#creating-images"&gt;image’s documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_ok_so_where_can_i_get_a_pre_built_image"&gt;&lt;a class="anchor" href="#_ok_so_where_can_i_get_a_pre_built_image"&gt;&lt;/a&gt;Ok so where can I get a pre-built image?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Previously the Infinispan images were deployed exclusively under the &lt;code&gt;jboss&lt;/code&gt; namespace at &lt;a href="https://hub.docker.com/r/jboss/infinispan-server/"&gt;jboss/infinispan-server&lt;/a&gt;, however this repository has now been deprecated and will be removed eventually.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Instead, all Infinispan images will now be released under the &lt;code&gt;infinispan&lt;/code&gt; namespace and are hosted at both &lt;a href="https://quay.io/infinispan/server"&gt;Quay.io&lt;/a&gt; and &lt;a href="https://hub.docker.com/r/infinispan/server"&gt;Docker Hub&lt;/a&gt;, as &lt;code&gt;quay.io/infinispan/server&lt;/code&gt; and &lt;code&gt;infinispan/server&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_getting_started"&gt;&lt;a class="anchor" href="#_getting_started"&gt;&lt;/a&gt;Getting Started&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get started with infinispan server on your local machine simply execute:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;docker run -p 11222:11222 infinispan/server&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default the image has authentication enabled on all exposed endpoints. When executing the above command the image automatically generates a username/password combo, prints the values to stdout and then starts the Infinispan server with the authenticated Hotrod and Rest endpoints exposed on port 11222. Therefore, it’s necessary to utilise the printed credentials when attempting to access the exposed endpoints via clients.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It’s also possible to provide a username/password combination via environment variables like so:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;docker run -p 11222:11222 -e USER="Titus Bramble" -e PASS="Shambles" infinispan/server&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_connecting_via_hotrod"&gt;&lt;a class="anchor" href="#_connecting_via_hotrod"&gt;&lt;/a&gt;Connecting via Hotrod&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Using the credentials passed in the command above, it is now possible to connect via the HotRod client using the following &lt;code&gt;hotrod-client.properties&lt;/code&gt; file. Note, that the following SASL properties must be configured on your client, with the username and password properties changed as required, otherwise the connection will fail:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;infinispan.remote.auth-realm=default infinispan.remote.auth-server-name=infinispan infinispan.remote.auth-username=Titus Bramble infinispan.remote.auth-password=Shambles&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_connecting_via_rest"&gt;&lt;a class="anchor" href="#_connecting_via_rest"&gt;&lt;/a&gt;Connecting via REST&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The REST endpoint is configured to utilise the DIGEST protocol, therefore it’s necessary for the HTTP client to authenticate requests. For example, the name of all caches can be retrieved via the following curl command:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt; curl --digest -u "Titus Bramble:Shambles" http://localhost:11222/rest/v2/cache&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_further_reading"&gt;&lt;a class="anchor" href="#_further_reading"&gt;&lt;/a&gt;Further Reading&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more detailed information abou how to use the image, please consult the &lt;a href="https://github.com/infinispan/infinispan-images/blob/10.0.x/README.md"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the next blog post we will look at how the server can be configured for more advanced use-cases by supplying configuration and identity &lt;code&gt;.yaml&lt;/code&gt; files.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us"&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please &lt;a href="http://infinispan.org/download/"&gt;download&lt;/a&gt;, &lt;a href="https://issues.jboss.org/projects/ISPN"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7f-Uy01xkRg" height="1" width="1" alt=""/&gt;</content><summary>Infinispan 10 introduced a new server, which does not utilise the same launch commands and configuration as the legacy 9.4 wildfly based server. Therefore, we decided that this was an excellent opportunity to rewrite our container image from scratch to better suite the capabilities of the new server and to provide all the functionality required by the Infinispan Operator. This post focuses on the ...</summary><dc:creator>Ryan Emerson</dc:creator><dc:date>2019-12-02T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2019/12/02/image/</feedburner:origLink></entry><entry><title>APIs as a Product: Get the value out of your APIs</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Hx6EL26diOc/" /><category term="API" scheme="searchisko:content:tags" /><category term="API as a Product" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat 3scale API Management" scheme="searchisko:content:tags" /><category term="Red Hat Integration" scheme="searchisko:content:tags" /><author><name>Nicolas Massé</name></author><id>searchisko:content:id:jbossorg_blog-apis_as_a_product_get_the_value_out_of_your_apis</id><updated>2019-12-02T08:00:50Z</updated><published>2019-12-02T08:00:50Z</published><content type="html">&lt;p&gt;APIs continue to spread, as seen in this 2019 report from &lt;a href="https://www.programmableweb.com/news/apis-show-faster-growth-rate-2019-previous-years/research/2019/07/17" target="_blank" rel="noopener noreferrer"&gt;ProgrammableWeb&lt;/a&gt;, which shows a 30% increase over last year&amp;#8217;s growth rate. More regulations are enforcing the use of APIs to open up companies and foster innovation. Think of the &lt;a href="https://www.gemalto.com/financial/ebanking/psd2"&gt;Payment Services Directive version two (PSD2)&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/resources/open-banking-technology-overview?source=searchresultlisting"&gt;open banking&lt;/a&gt;, and the public sector releasing 0pen data APIs. With such an abundance of APIs, it becomes increasingly crucial to get the value out of your APIs and differentiate yourself from the growing competition. It&amp;#8217;s time to design and manage your APIs as a Product.&lt;/p&gt; &lt;h2&gt;Change your organization&lt;/h2&gt; &lt;p&gt;Designing an API as a Product implies a lot of changes in the way APIs are designed and managed. It means changing your mindset from &amp;#8220;packaging existing services&amp;#8221; to &amp;#8220;fulfilling customer needs.&amp;#8221; For teams in charge of an API, this mindset implies being in charge of a product instead, and thus:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Focusing on customer needs rather than existing assets.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/02/25/full-api-lifecycle-management-a-primer/" target="_blank" rel="noopener noreferrer"&gt;Managing APIs continuously&lt;/a&gt; rather than for a project&amp;#8217;s lifetime.&lt;/li&gt; &lt;li&gt;Moving from finite resources to elastic computing.&lt;/li&gt; &lt;li&gt;Evolving from a central team specialized in APIs to product cross-functional teams with a variety of competencies.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In a nutshell, designing an API as a Product means:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Conceiving it specifically to solve a customer problem.&lt;/li&gt; &lt;li&gt;Setting shared indicators of the value delivered by the API.&lt;/li&gt; &lt;li&gt;Having a feedback loop to know what to improve.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Change your design process&lt;/h2&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-658177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-1024x445.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-1024x445.png" alt="Use API design thinking to design APIs as a product." width="640" height="278" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-1024x445.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-300x130.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/11/Screen-Shot-2019-11-22-at-19.05.23-768x333.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;Designing APIs as a Product also means changing the way we craft APIs (by adopting &lt;em&gt;API design thinking&lt;/em&gt;):&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The first step of design thinking applied to APIs is focusing on the customers. Through their eyes, what is their pain? &lt;em&gt;Empathize&lt;/em&gt; means meeting with and listening to your potential new customers. You will discover their understanding, how they are organized, which technical ecosystem they use, etc.&lt;/li&gt; &lt;li&gt;Then, you would synthesize your findings to &lt;em&gt;define&lt;/em&gt; which problem they are trying to solve and identify the &lt;a href="https://jtbd.info/" target="_blank" rel="noopener noreferrer"&gt;Job to be Done&lt;/a&gt;. Customers wanting to perform a transaction to buy a pet and customers willing to synchronize their pet inventory would lead to two very different Petstore APIs.&lt;/li&gt; &lt;li&gt;Once defined, you can &lt;a href="https://developers.redhat.com/blog/2018/04/11/api-journey-idea-deployment-agile-part1/"&gt;foster new ideas through a process known as API Ideation&lt;/a&gt;. During this step, you knock up different API designs to see if one stands up as a plausible solution.&lt;/li&gt; &lt;li&gt;During the &lt;em&gt;API Prototyping&lt;/em&gt; phase, you &lt;a href="https://developers.redhat.com/blog/2018/04/19/api-journey-idea-deployment-agile-way-part2/"&gt;mock your API based on meaningful examples&lt;/a&gt; to end up with a working API. Other team members can give their feedback on your design attempt.&lt;/li&gt; &lt;li&gt;The penultimate step is to &lt;em&gt;get feedback&lt;/em&gt; on your final design from your early adopters and thus refine the business expectations for your API.&lt;/li&gt; &lt;li&gt;Finally, you &lt;em&gt;implement&lt;/em&gt; the actual API.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Open source communities to help you design APIs as a Product&lt;/h2&gt; &lt;p&gt;So far, we have only spoken about organizational changes. Dedicated tools and open source communities can help you succeed in designing and managing APIs as a Product:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://microcks.github.io/" target="_blank" rel="noopener noreferrer"&gt;Microcks&lt;/a&gt; is the open source Kubernetes-native tool for API mocking and testing that helps you during the &lt;em&gt;Ideation&lt;/em&gt; and &lt;em&gt;Prototyping&lt;/em&gt; phases.&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.apicur.io/" target="_blank" rel="noopener noreferrer"&gt;Apicurio&lt;/a&gt; helps you design better API contracts in a collaborative fashion. Architects, product owners, designers, and developers can work together on the API designs.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/3scale/overview"&gt;Red Hat 3scale API Management&lt;/a&gt; eases the design and management of APIs as a Product by promoting the API designs, collecting feedback, and actually managing your APIs as a Product.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the next article, we&amp;#8217;ll look at how the most recent version of 3scale actually helps you build APIs as a Product.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#38;linkname=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fapis-as-a-product-get-the-value-out-of-your-apis%2F&amp;#038;title=APIs%20as%20a%20Product%3A%20Get%20the%20value%20out%20of%20your%20APIs" data-a2a-url="https://developers.redhat.com/blog/2019/12/02/apis-as-a-product-get-the-value-out-of-your-apis/" data-a2a-title="APIs as a Product: Get the value out of your APIs"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/02/apis-as-a-product-get-the-value-out-of-your-apis/"&gt;APIs as a Product: Get the value out of your APIs&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Hx6EL26diOc" height="1" width="1" alt=""/&gt;</content><summary>APIs continue to spread, as seen in this 2019 report from ProgrammableWeb, which shows a 30% increase over last year’s growth rate. More regulations are enforcing the use of APIs to open up companies and foster innovation. Think of the Payment Services Directive version two (PSD2), open banking, and the public sector releasing 0pen data APIs. With such an abundance of APIs, it becomes increasingly...</summary><dc:creator>Nicolas Massé</dc:creator><dc:date>2019-12-02T08:00:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/02/apis-as-a-product-get-the-value-out-of-your-apis/</feedburner:origLink></entry><entry><title>New Eclipse MicroProfile book provides introduction to enterprise Java microservices</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xqfh8dfDl8g/" /><category term="book" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="microprofile" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><author><name>Heiko Rupp</name></author><id>searchisko:content:id:jbossorg_blog-new_eclipse_microprofile_book_provides_introduction_to_enterprise_java_microservices</id><updated>2019-12-02T08:00:15Z</updated><published>2019-12-02T08:00:15Z</published><content type="html">&lt;p&gt;Fellow Red Hat associates &lt;a href="https://developers.redhat.com/blog/author/csaavedra/"&gt;Cesar Saavedra&lt;/a&gt;, Pavol Loffay, Jeff Mesnil, &lt;a href="https://developers.redhat.com/blog/author/asdurand/"&gt;Antoine Sabot-Durand&lt;/a&gt;, Scott Stark, and I have written a book on &lt;a href="https://microprofile.io/"&gt;Eclipse MicroProfile&lt;/a&gt;, called &lt;em&gt;&lt;a href="https://www.packtpub.com/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;&lt;span class="base" data-ui-id="page-title-wrapper"&gt;Hands-On Enterprise Java Microservices with Eclipse MicroProfile&lt;/span&gt;&lt;/a&gt;. &lt;/em&gt;&lt;/p&gt; &lt;p&gt;This 256-page book provides an introduction to microservices and why they are important, and it showcases Eclipse MicroProfile as a way to implement so-called 12-factor apps.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Now through December 15, you can use the following link and discount code to receive a 20% discount when purchasing this ebook through the Packt website.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.packtpub.com/in/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;&lt;em&gt;&lt;span class="base" data-ui-id="page-title-wrapper"&gt;Hands-On Enterprise Java Microservices with Eclipse MicroProfile&lt;/span&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Discount code: &lt;strong&gt;eclipse20&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-635337"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The book includes detailed explanations and examples for the following MicroProfile features: Config, Fault Tolerance, Health Check, JWT Propagation, Metrics, and OpenTracing. MicroProfile Implementations, Quarkus, and Interoperability are shown via a conference application example, and a working Eclipse MicroProfile code sample is provided. We also discuss future developments and using MicroProfile in multi-cloud environments.&lt;/p&gt; &lt;h3 class="page-title"&gt;&lt;a href="https://www.packtpub.com/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;&lt;span class="base" data-ui-id="page-title-wrapper"&gt;Hands-On Enterprise Java Microservices with Eclipse MicroProfile&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-636137 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-839x1024.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-839x1024.png" alt="Eclipse Microprofile" width="400" height="488" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-839x1024.png 839w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-246x300.png 246w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM-768x937.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screen-Shot-2019-10-03-at-10.44.27-AM.png 1092w" sizes="(max-width: 400px) 100vw, 400px" /&gt;&lt;/p&gt; &lt;p&gt;Visit the &lt;a href="https://www.packtpub.com/web-development/hands-on-enterprise-java-microservices-with-eclipse-microprofile"&gt;Packt website&lt;/a&gt; for more information.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#38;linkname=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F12%2F02%2Fnew-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices%2F&amp;#038;title=New%20Eclipse%20MicroProfile%20book%20provides%20introduction%20to%20enterprise%20Java%20microservices" data-a2a-url="https://developers.redhat.com/blog/2019/12/02/new-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices/" data-a2a-title="New Eclipse MicroProfile book provides introduction to enterprise Java microservices"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/12/02/new-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices/"&gt;New Eclipse MicroProfile book provides introduction to enterprise Java microservices&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xqfh8dfDl8g" height="1" width="1" alt=""/&gt;</content><summary>Fellow Red Hat associates Cesar Saavedra, Pavol Loffay, Jeff Mesnil, Antoine Sabot-Durand, Scott Stark, and I have written a book on Eclipse MicroProfile, called Hands-On Enterprise Java Microservices with Eclipse MicroProfile.  This 256-page book provides an introduction to microservices and why they are important, and it showcases Eclipse MicroProfile as a way to implement so-called 12-factor ap...</summary><dc:creator>Heiko Rupp</dc:creator><dc:date>2019-12-02T08:00:15Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/12/02/new-eclipse-microprofile-book-provides-introduction-to-enterprise-java-microservices/</feedburner:origLink></entry><entry><title>Code Ready Containers - Getting Started with Process Automation in the Cloud</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ptuQ7jkG9Js/code-ready-containers-getting-started-with-process-automation.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="CodeReadyContainers" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-code_ready_containers_getting_started_with_process_automation_in_the_cloud</id><updated>2019-12-02T06:00:07Z</updated><published>2019-12-02T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-dbY8lsMzQJw/Xd1LLSQZlJI/AAAAAAAAwvs/m3n8QdK6aLANchi1pOGPZQmyfUGAs-ueACNcBGAsYHQ/s1600/rhcs-rhpam-ocp.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation" border="0" data-original-height="886" data-original-width="1600" height="177" src="https://1.bp.blogspot.com/-dbY8lsMzQJw/Xd1LLSQZlJI/AAAAAAAAwvs/m3n8QdK6aLANchi1pOGPZQmyfUGAs-ueACNcBGAsYHQ/s320/rhcs-rhpam-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;AppDev in the Cloud with Process Automation&lt;/td&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;Previously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by &lt;a href="https://www.schabell.org/2019/11/how-to-setup-openshift-container-platform-in-minutes.html" target="_blank"&gt;updating the Code Ready Containers Easy Install&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start leveraging this local container platform cluster for some cloud native development experience, focusing on bringing all the existing content up to date.&lt;br /&gt;&lt;br /&gt;This articles outlines getting started with the &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo" target="_blank"&gt;Red Hat Process Automation Easy Install project&lt;/a&gt; on the above installation as default, though you can point this installation to any existing OpenShift Container Platform (pass an IP address).&lt;br /&gt;&lt;br /&gt;Let's take a look at how easy it is to get started with &lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo" target="_blank"&gt;Code Ready Containers Red Hat Process Automation Easy Install project&lt;/a&gt;.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-0N31aSoNTxU/Xd1KawUtCoI/AAAAAAAAwvk/7YvCHN9vr2IMkoR91KswFfDXz6WN0R6ewCNcBGAsYHQ/s1600/rhcs-rhpam-pod-ocp.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="red hat process automation " border="0" data-original-height="888" data-original-width="1600" height="177" src="https://1.bp.blogspot.com/-0N31aSoNTxU/Xd1KawUtCoI/AAAAAAAAwvk/7YvCHN9vr2IMkoR91KswFfDXz6WN0R6ewCNcBGAsYHQ/s320/rhcs-rhpam-pod-ocp.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Red Hat Process Automation tooling deployed on&lt;br /&gt;OpenShift Container Platform&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Anyone spending any time with the content found on &lt;a href="https://gitlab.com/redhatdemocentral" target="_blank"&gt;Red Hat Demo Central&lt;/a&gt; should notice that all projects are designed using a template for consistent installation experiences.&lt;br /&gt;&lt;br /&gt;This one is no different and you can follow the same installation steps you would expect in the readme file:&lt;br /&gt;&lt;br /&gt;&lt;h2 data-sourcepos="7:1-9:132" dir="auto"&gt;Install on OpenShift Container Platform&lt;/h2&gt;&lt;div data-sourcepos="9:1-10:83" dir="auto"&gt;There are two options to install and run this project on the OpenShift Container Platform (OCP); use your own existing installation or to install on Code Ready Containers which provides you with a local OCP cluster.&lt;/div&gt;&lt;ol data-sourcepos="12:1-13:0" dir="auto"&gt;&lt;li data-sourcepos="12:1-13:0"&gt;Ensure you have an OpenShift container based installation, such as one of the following:&lt;/li&gt;&lt;/ol&gt;&lt;ul data-sourcepos="14:3-17:0" dir="auto"&gt;&lt;li data-sourcepos="14:3-15:0"&gt;&lt;div data-sourcepos="14:5-14:116"&gt;your own OpenShift installation, if using this you just need to pass the IP address to the init.{sh|bat} script.&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="16:3-17:0"&gt;&lt;div data-sourcepos="16:5-16:95"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo"&gt;Code Ready Containers Easy Install&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-sourcepos="18:1-23:0" dir="auto" start="2"&gt;&lt;li data-sourcepos="18:1-19:0"&gt;&lt;div data-sourcepos="18:4-18:148"&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo/-/archive/master/rhcs-rhpam-install-demo-master.zip"&gt;Download and unzip this demo.&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="20:1-21:0"&gt;&lt;div data-sourcepos="20:4-20:116"&gt;Download Red Hat JBoss EAP &amp;amp; Red Hat Process Automation Manager, add to installs directory (see installs/README).&lt;/div&gt;&lt;/li&gt;&lt;li data-sourcepos="22:1-23:0"&gt;&lt;div data-sourcepos="22:4-22:91"&gt;Run 'init.sh' or 'init.bat' file. 'init.bat' must be run with Administrative privileges:&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using your own installation just point to Openshift Container Platform IP Address&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; $ ./init.sh 192.168.99.100 # example for OCP.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="code highlight js-syntax-highlight plaintext dark" lang="plaintext"&gt;&lt;code&gt;&lt;span class="line" id="LC1" lang="plaintext"&gt; # If using Code Ready Containers or the Code Ready Containers Easy Install project, just add the cluster &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC2" lang="plaintext"&gt; # address to HOST_IP variable found at the top of the init.{sh|bat} files, for example:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC3" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC4" lang="plaintext"&gt; # HOST_IP=api.crc.testing &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC5" lang="plaintext"&gt; # &lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC6" lang="plaintext"&gt; # Now just run the script without any IP address arguments and it picks up that hostname as follows:&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC7" lang="plaintext"&gt; #&lt;/span&gt;&lt;br /&gt;&lt;span class="line" id="LC8" lang="plaintext"&gt; $ ./init.sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div data-sourcepos="42:1-42:150" dir="auto"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div data-sourcepos="42:1-42:150" dir="auto"&gt;Now log in to Red Hat Process Automation Manager to start developing containerized process automation projects (the address will be generated by OCP):&lt;/div&gt;&lt;ul data-sourcepos="44:3-45:0" dir="auto"&gt;&lt;li data-sourcepos="44:3-45:0"&gt;Code Ready Container example: http:rhcs-rhpam-install-demo-appdev-in-cloud.apps-crc.testing/business-central ( u:erics / p:redhatpam1! )&lt;/li&gt;&lt;/ul&gt;&lt;div data-sourcepos="46:1-46:205" dir="auto"&gt;Not sure how to get started with Red Hat Process Automation Manager? Try one of these &lt;a href="https://bpmworkshop.gitlab.io/index-redhat.html#/3" rel=" noreferrer noopener" target="_blank"&gt;online workshops&lt;/a&gt; to build a first project from scratch.&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=t6NT-FHuhls:8CXGpHcmZ48:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=t6NT-FHuhls:8CXGpHcmZ48:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/t6NT-FHuhls" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ptuQ7jkG9Js" height="1" width="1" alt=""/&gt;</content><summary>AppDev in the Cloud with Process Automation Previously posted that I've started a refresh of the Red Hat Demo Central collection of AppDev in the Cloud projects by updating the Code Ready Containers Easy Install. As it promises, you'll have a local container platform cluster installed on your personal machine based on OpenShift Container Platform 4.2, in just minutes. The next step is to start lev...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-12-02T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/t6NT-FHuhls/code-ready-containers-getting-started-with-process-automation.html</feedburner:origLink></entry></feed>
